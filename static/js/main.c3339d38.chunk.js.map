{"version":3,"sources":["components/test_page/TestPage.module.scss","components/home_page/HomePage.module.scss","components/header/Header.module.scss","App.module.scss","components/left_panel/LeftPanel.module.scss","AppReducer.ts","TestDataContext.ts","components/header/Header.tsx","components/accordion/AccordionItem.tsx","components/accordion/Accordion.tsx","components/left_panel/LeftPanel.tsx","utilities/LatexParser.ts","components/test_page/TestPage.tsx","components/home_page/HomePage.tsx","App.tsx","serviceWorker.ts","index.tsx","components/accordion/Accordion.module.scss"],"names":["module","exports","gridColumnStyle","leftPanelWidth","grabWidth","pseudoWidth","gridRowStyle","headerPanelHeight","appGridInit","isShown","defaultLeftPanelWidth","arrowClass","styles","ArrowRotate","leftPanelWidthStyle","columnStyle","rowStyle","appGridReducer","state","action","type","updatedLeftPanelWidth","ArrowNormal","value","testData","cloneDeep","testJson","TestDataContext","React","createContext","Header","styleOptions","className","Container","style","to","Logo","viewBox","width","fill","d","reducer","active","chevronClass","ItemTriggerArrowNormal","ItemTriggerArrowRotate","AccordionItem","school","years","useReducer","dispatch","accordionBody","useRef","Item","ItemTrigger","onClick","ItemTriggerName","focusable","aria-hidden","ref","ItemBody","current","height","scrollHeight","getWrapperStyle","map","year","index","key","ItemBodyRow","Accordion","header","competitions","Title","TitleContent","competition","LeftPanel","divRef","testInfo","LatexParserOptions","TestPage","useParams","yearAsString","useEffect","typeset","foundTest","useContext","find","test","selector","mathJax","window","MathJax","console","log","startup","promise","then","typesetPromise","catch","err","error","message","MainHeader","mainTitle","Direction","parse","direction","sections","section","sectionIndex","title","SectionHeader","listStyleType","questions","questionItem","question","HomePage","Message","fontWeight","Disclaimer","App","appReducer","parseInt","leftPanelWidht","leftPanelRef","offsetWidth","timerRef","resizeListener","clearTimeout","setTimeout","addEventListener","removeEventListener","schoolSet","Set","forEach","add","testMap","Map","set","get","push","length","item","toString","process","PUBLIC_ENV","AppContainer","gridTemplateColumns","gridRow","gridColumn","LeftGrabContainer","path","exact","BottomPanel","RightMostPanel","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c3339d38.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerPanelHeight\":\"100px\",\"leftPanelWidth\":\"220px\",\"grabWidth\":\"10px\",\"pseudoWidth\":\"1px\",\"shadow\":\"TestPage_shadow__3T8jg\",\"MainHeader\":\"TestPage_MainHeader__2arW8\",\"SectionHeader\":\"TestPage_SectionHeader__3zdyP\",\"Container\":\"TestPage_Container__27Nux\",\"Direction\":\"TestPage_Direction__f2pyR\",\"info\":\"TestPage_info__3dNQw\",\"line\":\"TestPage_line__3jpR9\",\"vspace\":\"TestPage_vspace__3gPzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerPanelHeight\":\"100px\",\"leftPanelWidth\":\"220px\",\"grabWidth\":\"10px\",\"pseudoWidth\":\"1px\",\"shadow\":\"HomePage_shadow__157z8\",\"Container\":\"HomePage_Container__3biGo\",\"Message\":\"HomePage_Message__3NevL\",\"Disclaimer\":\"HomePage_Disclaimer__2GrIl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerPanelHeight\":\"100px\",\"leftPanelWidth\":\"220px\",\"grabWidth\":\"10px\",\"pseudoWidth\":\"1px\",\"shadow\":\"Header_shadow__c1sLV\",\"Container\":\"Header_Container__1tFlj\",\"Logo\":\"Header_Logo__23yGT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerPanelHeight\":\"100px\",\"leftPanelWidth\":\"220px\",\"grabWidth\":\"10px\",\"pseudoWidth\":\"1px\",\"shadow\":\"App_shadow__4PQ5Q\",\"AppContainer\":\"App_AppContainer__1QrdK\",\"LeftGrabContainer\":\"App_LeftGrabContainer__1ZCiO\",\"BottomPanel\":\"App_BottomPanel__j5tmS\",\"RightMostPanel\":\"App_RightMostPanel__33EaA\",\"Arrow\":\"App_Arrow__53qFB\",\"ArrowNormal\":\"App_ArrowNormal__3coPN\",\"ArrowRotate\":\"App_ArrowRotate__ZD2Gr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerPanelHeight\":\"100px\",\"leftPanelWidth\":\"220px\",\"grabWidth\":\"10px\",\"pseudoWidth\":\"1px\",\"shadow\":\"LeftPanel_shadow__1PfW3\",\"Container\":\"LeftPanel_Container__NMvdN\"};","import styles from \"./App.module.scss\";\n\nexport const TOGGLE = \"TOGGLE\";\ntype Toggle = {\n  readonly type: typeof TOGGLE;\n};\n\nexport const INITIALIZER = \"INITIALIZER\";\ntype Initialize = {\n  readonly type: typeof INITIALIZER;\n  value: number;\n};\n\nexport const RESIZE = \"RESIZE\";\ntype Resize = {\n  readonly type: typeof RESIZE;\n};\n\nexport type AppGridActions = Toggle | Initialize | Resize;\n\nexport const gridColumnStyle = (\n  leftPanelWidth: number,\n  grabWidth: number,\n  pseudoWidth: number\n): string => {\n  return `${leftPanelWidth}px ${grabWidth}px  calc(\n    100% - ${leftPanelWidth}px - ${grabWidth}px - ${pseudoWidth}px`;\n};\n\nexport const gridRowStyle = (\n  headerPanelHeight: number,\n  pseudoWidth: number\n): string => {\n  return `${headerPanelHeight}px calc(\n    100% - ${headerPanelHeight}px  - ${pseudoWidth}px`;\n};\n\nexport type AppGridStates = {\n  isShown: boolean;\n  headerPanelHeight: number;\n  defaultLeftPanelWidth: number;\n  leftPanelWidth: number;\n  grabWidth: number;\n  pseudoWidth: number;\n  arrowClass: string;\n  leftPanelWidthStyle: string | undefined;\n  columnStyle: string | undefined;\n  rowStyle: string | undefined;\n};\n\n// initialize AppGridStates to match values in _global.scss\nexport const appGridInit = ({\n  isShown,\n  headerPanelHeight,\n  defaultLeftPanelWidth,\n  grabWidth,\n  pseudoWidth,\n}: AppGridStates): AppGridStates => {\n  return {\n    isShown: true,\n    headerPanelHeight: headerPanelHeight,\n    defaultLeftPanelWidth: defaultLeftPanelWidth,\n    leftPanelWidth: defaultLeftPanelWidth,\n    grabWidth: grabWidth,\n    pseudoWidth: pseudoWidth,\n    arrowClass: styles.ArrowRotate,\n    leftPanelWidthStyle: isShown ? `${defaultLeftPanelWidth}px` : \"0px\",\n    columnStyle: gridColumnStyle(defaultLeftPanelWidth, grabWidth, pseudoWidth),\n    rowStyle: gridRowStyle(headerPanelHeight, pseudoWidth),\n  };\n};\n\n// function reducer (state:State, action:Actions): State{\nexport const appGridReducer = (\n  state: AppGridStates,\n  action: AppGridActions\n): AppGridStates => {\n  // console.log(action.type, state);\n  switch (action.type) {\n    case TOGGLE:\n      let updatedLeftPanelWidth = !state.isShown\n        ? state.defaultLeftPanelWidth\n        : 0;\n      // console.log(updatedLeftPanelWidth);\n      return {\n        ...state,\n        isShown: !state.isShown,\n        arrowClass: !state.isShown ? styles.ArrowRotate : styles.ArrowNormal,\n        leftPanelWidth: updatedLeftPanelWidth,\n        leftPanelWidthStyle: `${updatedLeftPanelWidth}px`,\n        columnStyle: gridColumnStyle(\n          updatedLeftPanelWidth,\n          state.grabWidth,\n          state.pseudoWidth\n        ),\n      };\n    case INITIALIZER:\n      // console.log(action.value);\n      return appGridInit({ ...state, defaultLeftPanelWidth: action.value });\n    case RESIZE:\n      return {\n        ...state,\n        columnStyle: gridColumnStyle(\n          state.leftPanelWidth,\n          state.grabWidth,\n          state.pseudoWidth\n        ),\n        rowStyle: gridRowStyle(state.headerPanelHeight, state.pseudoWidth),\n      };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { cloneDeep } from \"lodash\";\n\nimport testJson from \"./data/test_db.json\";\n\nimport { ITest } from \"./components/test_page/Test.model\";\n\nconst testData: ITest[] = cloneDeep(testJson as ITest[]);\n\nconst TestDataContext = React.createContext(testData);\n\nexport default TestDataContext;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport styles from \"./Header.module.scss\";\n\ntype HeaderProps = {\n  styleOptions: React.CSSProperties;\n};\n\nconst Header = ({ styleOptions }: HeaderProps): JSX.Element => {\n  return (\n    <div className={styles.Container} style={styleOptions}>\n      <NavLink to=\"/\">\n        <div className={styles.Logo}>\n          <svg viewBox=\"0 0 105.83389 23.244175\" width=\"200px\" fill=\"#009fA2\">\n            <path d=\"M 87.487598,17.084746 V 18.714584 19.413086 H 88.609436 94.176289 V 18.714584 17.084746 H 95.827295 V 18.714584 19.413086 Q 95.827295,20.217422 95.319292,20.545507 94.821874,20.873592 93.816454,20.873592 H 87.424098 87.847434 Q 86.842013,20.873592 86.334012,20.545507 85.836593,20.217422 85.836593,19.413086 V 18.714584 17.084746 Z M 91.593947,23.244266 V 21.550927 H 90.006441 V 23.244266 Z M 80.259174,19.476586 79.698255,18.714584 H 77.761497 L 78.904502,17.084746 H 79.708838 80.513174 L 84.704188,23.244266 H 83.116684 L 81.31751,20.873592 H 80.470841 79.518338 78.142499 L 76.300993,23.244266 H 74.713487 L 77.295829,19.476586 H 79.095002 Z M 72.004158,20.704258 V 19.518919 Q 71.930073,19.201419 71.559655,18.958003 71.189237,18.714584 70.628319,18.714584 H 66.521972 63.590378 V 17.084746 H 65.590635 L 71.580822,17.095329 Q 72.416909,17.095329 72.998994,17.550414 73.581079,17.994914 73.581079,18.629917 V 21.709677 Q 73.581079,22.344679 72.998994,22.799765 72.416909,23.244266 71.580822,23.244266 H 65.590635 63.590378 V 19.39192 H 65.177884 V 20.725425 21.572094 H 66.511388 70.681236 Q 71.189237,21.572094 71.591405,21.318093 72.004158,21.05351 72.004158,20.704258 Z M 54.531041,20.704258 V 19.518919 Q 54.456958,19.201419 54.08654,18.958003 53.716121,18.714584 53.155203,18.714584 H 49.048855 46.117262 V 17.084746 H 48.117519 L 54.107706,17.095329 Q 54.943792,17.095329 55.525877,17.550414 56.107963,17.994914 56.107963,18.629917 V 21.709677 Q 56.107963,22.344679 55.525877,22.799765 54.943792,23.244266 54.107706,23.244266 H 48.117519 46.117262 V 19.39192 H 47.704768 V 20.725425 21.572094 H 49.038272 53.20812 Q 53.716121,21.572094 54.11829,21.318093 54.531041,21.05351 54.531041,20.704258 Z M 43.587851,21.572094 H 44.984855 V 23.244266 H 42.984599 36.994411 Q 36.158325,23.244266 35.57624,22.799765 34.994155,22.344679 34.994155,21.709677 V 18.619334 17.084746 H 36.58166 V 19.540087 20.725425 Q 36.58166,21.064093 36.962661,21.318093 37.343663,21.572094 37.915164,21.572094 H 42.085012 Z M 32.464743,21.572094 H 33.861749 V 23.244266 H 31.861491 25.871304 Q 25.035218,23.244266 24.453132,22.799765 23.871047,22.344679 23.871047,21.709677 V 19.413086 H 33.861749 V 20.873592 H 25.458552 V 21.572094 H 26.792057 30.961905 Z M 23.871047,18.714584 V 18.619334 Q 23.871047,17.984331 24.453132,17.53983 25.035218,17.084746 25.871304,17.084746 L 31.861491,17.095329 33.861749,17.084746 V 18.714584 H 26.80264 26.241722 Z M 22.717471,17.084746 V 18.714584 H 21.129966 V 17.084746 Z M 22.717471,23.244266 H 21.129966 V 19.39192 H 22.717471 V 20.725425 Z M 10.006858,18.714584 V 18.619334 Q 10.006858,17.984331 10.588943,17.53983 11.171028,17.084746 12.007115,17.084746 L 17.997301,17.095329 19.997558,17.084746 V 18.714584 H 12.938452 12.377534 Z M 11.594363,23.244266 H 10.006858 V 21.709677 19.413086 H 19.997558 V 20.873592 H 11.594363 V 21.572094 Z M 99.944314,5.7864761 H 101.95921 V 9.1991777e-5 H 105.83403 V 11.288706 15.034357 H 101.95921 V 9.3513015 H 90.024794 87.131603 V 5.7864761 H 89.456488 98.471884 Z M 85.323358,15.034357 H 81.448547 V 5.6314837 3.978231 9.1991777e-5 H 85.323358 V 10.95289 Z M 68.35172,15.034357 H 64.47691 V 3.978231 H 60.085459 54.299075 V 9.1991777e-5 H 59.181336 L 73.802288,0.02592409 78.68455,9.1991777e-5 V 3.978231 H 68.35172 Z M 40.685607,5.8381403 39.316507,3.978231 H 34.589238 L 37.379102,9.1991777e-5 H 39.34234 41.305577 L 51.535077,15.034357 H 47.660267 L 43.268814,9.2479735 H 41.202248 38.877362 35.519192 L 31.024412,15.034357 H 27.149602 L 33.452627,5.8381403 H 37.844079 Z M 3.8749404,5.7864761 V 9.5062945 15.034357 H 1.2985199e-4 V 5.7864761 Z M 20.510794,15.034357 H 24.385604 V 11.288706 9.1991777e-5 H 18.857542 L 12.296196,10.384584 5.3215366,9.1991777e-5 H 1.2985199e-4 V 3.978231 H 3.9266045 L 10.952928,15.034357 H 13.536134 L 20.510794,3.978231 Z\" />\n          </svg>\n        </div>\n      </NavLink>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useReducer, useRef } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport styles from \"./Accordion.module.scss\";\n\nimport { AccordionItemModel } from \"./Accordion.model\";\n\ntype AccordionItemState = {\n  active: boolean;\n  chevronClass: string;\n};\n\nconst TOGGLE = \"TOGGLE\";\ntype Toggle = {\n  readonly type: typeof TOGGLE;\n};\n\nconst FUTURE = \"FUTURE\";\ntype Future = {\n  readonly type: typeof FUTURE;\n};\n\ntype AccordionItemActions = Toggle | Future;\n\n// function reducer (state:State, action:Actions): State{\nconst reducer = (\n  state: AccordionItemState,\n  action: AccordionItemActions\n): AccordionItemState => {\n  // console.log(action.type);\n  switch (action.type) {\n    case TOGGLE:\n      return {\n        ...state,\n        active: !state.active,\n        chevronClass: !state.active\n          ? styles.ItemTriggerArrowRotate\n          : styles.ItemTriggerArrowNormal,\n      };\n    case FUTURE:\n      return {\n        ...state,\n        active: state.active,\n      };\n    default:\n      return state;\n  }\n};\n\nconst AccordionItem = ({ school, years }: AccordionItemModel): JSX.Element => {\n  const [state, dispatch] = useReducer<\n    React.Reducer<AccordionItemState, AccordionItemActions>\n  >(reducer, {\n    active: false,\n    chevronClass: styles.ItemTriggerArrowNormal,\n  });\n  const accordionBody = useRef<HTMLDivElement>(null);\n  // const triggerArrow = useRef<HTMLDivElement>(null);\n\n  const getWrapperStyle = (): React.CSSProperties => {\n    if (accordionBody.current !== null) {\n      return state.active && accordionBody\n        ? { height: accordionBody.current?.scrollHeight + 10 }\n        : { height: 0 };\n    } else {\n      return { height: 0 };\n    }\n  };\n\n  return (\n    <div className={styles.Item}>\n      <div\n        className={styles.ItemTrigger}\n        onClick={() => dispatch({ type: TOGGLE })}\n      >\n        <div className={styles.ItemTriggerName}>{school}</div>\n        <div className={`${state.chevronClass}`}>\n          <svg\n            viewBox=\"0 0 10 10\"\n            width=\"14px\"\n            focusable=\"false\"\n            aria-hidden=\"true\"\n          >\n            <path d=\"M 0,0 H 10 L 5, 10 Z\"></path>\n          </svg>\n        </div>\n      </div>\n      <div\n        ref={accordionBody}\n        className={styles.ItemBody}\n        style={getWrapperStyle()}\n      >\n        {years.map((year, index) => (\n          <NavLink\n            key={index}\n            to={`/TestPage/${school}/${year}`}\n            className={styles.ItemBodyRow}\n          >\n            {\"Year \" + year}\n          </NavLink>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AccordionItem;\n","import React from \"react\";\n\nimport styles from \"./Accordion.module.scss\";\n\nimport { AccordionModel } from \"./Accordion.model\";\nimport AccordionItem from \"./AccordionItem\";\n\nconst Accordion = ({\n  header,\n  competitions,\n  styleOptions,\n}: AccordionModel): JSX.Element => {\n  return (\n    <div className={styles.Container} style={styleOptions}>\n      <div className={styles.Title}>\n        <div className={styles.TitleContent}>{header}</div>\n      </div>\n      {competitions.map((competition, index) => (\n        <AccordionItem\n          key={index}\n          school={competition.school}\n          years={competition.years}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Accordion;\n","import React from \"react\";\n\nimport styles from \"./LeftPanel.module.scss\";\n\nimport Accordion from \"../accordion/Accordion\";\nimport { AccordionModel } from \"../accordion/Accordion.model\";\n\ntype LeftPanelProps = {\n  divRef: React.RefObject<HTMLDivElement>;\n  styleOptions: React.CSSProperties;\n  testInfo: AccordionModel;\n};\n\nconst LeftPanel = ({ divRef, styleOptions, testInfo }: LeftPanelProps) => {\n  return (\n    <div ref={divRef} className={styles.Container} style={styleOptions}>\n      <div className=\"App\">\n        <div>\n          <Accordion\n            header={testInfo.header}\n            competitions={testInfo.competitions}\n            // styleOptions={{ width: \"200px\" }}\n            styleOptions={{}}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LeftPanel;\n","import React from \"react\";\n// import * as Latex from \"react-latex\";\n\ntype Attributes = {\n  displayMode?: boolean;\n  fleqn?: boolean;\n};\n\nexport const LatexParserOptions = {\n  // replace: (domNode: any) => {\n  //   // console.log(domNode);\n  //   if (domNode.name === \"latex\") {\n  //     // console.log(\"attib\", domNode.attribs, domNode.attribs?.displaymode);\n  //     let attribs: Attributes = {};\n  //     if (domNode.attribs?.displaymode) {\n  //       attribs.displayMode = true;\n  //     }\n  //     if (domNode.attribs?.fleqn) {\n  //       attribs.fleqn = true;\n  //     }\n  //     return React.createElement(Latex, attribs, domNode.children[0].data);\n  //   }\n  // },\n};\n","import React, { useContext, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n// import \"katex/dist/katex.min.css\";\nimport parse from \"html-react-parser\";\nimport { LatexParserOptions } from \"../../utilities/LatexParser\";\n\nimport styles from \"./TestPage.module.scss\";\n\nimport TestDataContext from \"../..//TestDataContext\";\nimport { IQuestion, ITest } from \"./Test.model\";\n\nconst getMathJax = () => (window as any).MathJax;\n\ntype TestPageProps = {\n  styleOptions: React.CSSProperties;\n};\n\nconst TestPage = ({ styleOptions }: TestPageProps) => {\n  let { school, yearAsString } = useParams<TestPageParams>();\n  const divRef = useRef<HTMLDivElement | null>(null);\n  useEffect(() => {\n    typeset(() => divRef.current!);\n  }, [school, yearAsString]);\n\n  const testData: ITest[] = useContext(TestDataContext);\n  const foundTest = testData.find((test) => {\n    return test.school === school && test.year === yearAsString;\n  });\n\n  const typeset = (selector: () => HTMLElement) => {\n    const mathJax = getMathJax();\n    // If MathJax script hasn't been loaded yet, then do nothing.\n    console.log(\"selector\", selector());\n    if (!mathJax) {\n      return null;\n    }\n    if (!mathJax.startup.promise) {\n      return null;\n    }\n    mathJax.startup.promise = mathJax.startup?.promise\n      .then(() => {\n        selector();\n        return mathJax.typesetPromise();\n      })\n      .catch((err: any) => console.error(`Typeset failed: ${err.message}`));\n    return mathJax.startup.promise;\n  };\n\n  type TestPageParams = {\n    school?: string | undefined;\n    yearAsString?: string;\n  };\n\n  return (\n    <div className={styles.Container} style={styleOptions}>\n      {foundTest ? (\n        <div className={styles.MainHeader}>{foundTest?.mainTitle}</div>\n      ) : null}\n      {foundTest ? (\n        <div className={styles.Direction}>\n          {parse(foundTest.direction, LatexParserOptions)}\n        </div>\n      ) : null}\n      {foundTest?.sections.map((section, sectionIndex) => (\n        <div key={sectionIndex}>\n          {section.title === \"Tie-Breakers\" ? (\n            <div>\n              <div className={styles.SectionHeader}>{section.title} </div>\n              <ol style={{ listStyleType: \"upper-alpha\" }}>\n                {section.questions?.map(\n                  (questionItem: IQuestion, index: number) => (\n                    <li key={index}>\n                      {parse(questionItem.question, LatexParserOptions)}\n                    </li>\n                  )\n                )}\n              </ol>\n            </div>\n          ) : (\n            <ol>\n              {section.questions?.map(\n                (questionItem: IQuestion, index: number) => (\n                  <li key={index}>\n                    {parse(questionItem.question, LatexParserOptions)}\n                  </li>\n                )\n              )}\n            </ol>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TestPage;\n","import React from \"react\";\n\nimport styles from \"./HomePage.module.scss\";\n\ntype HomePageProps = {\n  styleOptions: React.CSSProperties;\n};\n\nconst HomePage = ({ styleOptions }: HomePageProps) => {\n  return (\n    <div className={styles.Container} style={styleOptions}>\n      <div className={styles.Message}>\n        Here, there are collections of previous Math Field Day tests given at\n        the Palos Verdes Peninsula School District. Mrs. Mairs and Mrs. Thom\n        have hosted this competition since\n        <span style={{ fontWeight: \"bold\" }}> forever!</span>\n      </div>\n\n      <div className={styles.Disclaimer}>\n        The content of the test was generated from an Adobe-scanned of the paper\n        versions. As a result, there may be some errors. We hoped that those\n        errors would get corrected over time.\n      </div>\n      <div className={styles.Disclaimer} style={{ fontWeight: \"bold\" }}>\n        To the best of our understanding, the test content belongs to Mrs. Mairs\n        and Mrs. Thom.\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React, {\n  useReducer,\n  useEffect,\n  useRef,\n  useContext,\n  useState,\n} from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport styles from \"./App.module.scss\";\n\nimport * as appReducer from \"./AppReducer\";\n\nimport TestDataContext from \"./TestDataContext\";\nimport { ITest } from \"./components/test_page/Test.model\";\n\nimport Header from \"./components/header/Header\";\nimport LeftPanel from \"./components/left_panel/LeftPanel\";\nimport TestPage from \"./components/test_page/TestPage\";\nimport HomePage from \"./components/home_page/HomePage\";\n\nimport {\n  AccordionItemModel,\n  AccordionModel,\n} from \"./components/accordion/Accordion.model\";\n\nconst WAIT_TIMEOUT: number = 1000;\n\nconst App = () => {\n  const [state, dispatch] = useReducer(\n    appReducer.appGridReducer,\n    {\n      isShown: true,\n      headerPanelHeight: parseInt(styles.headerPanelHeight),\n      defaultLeftPanelWidth: parseInt(styles.leftPanelWidth),\n      leftPanelWidth: parseInt(styles.leftPanelWidht),\n      grabWidth: parseInt(styles.grabWidth),\n      pseudoWidth: parseInt(styles.pseudoWidth),\n      arrowClass: styles.ArrowRotate,\n      leftPanelWidthStyle: `${parseInt(styles.leftPanelWidth)}px`,\n      columnStyle: appReducer.gridColumnStyle(\n        parseInt(styles.leftPanelWidht),\n        parseInt(styles.grabWidth),\n        parseInt(styles.pseudoWidth)\n      ),\n      rowStyle: appReducer.gridRowStyle(\n        parseInt(styles.headerPanelHeight),\n        parseInt(styles.pseudoWidth)\n      ),\n    },\n    appReducer.appGridInit\n  );\n\n  useEffect(() => {\n    // Either getting panel with from _globas.scss export\n    // dispatch({ type: INITIALIZER, value: parseInt(styles.leftPanelWidth) });\n\n    // Or getting it from useRef linking to div in LeftPanel\n    // to make sure it is the post mounted value\n    dispatch({\n      type: appReducer.INITIALIZER,\n      value: leftPanelRef.current ? leftPanelRef.current.offsetWidth : 0,\n    });\n  }, []);\n\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    const resizeListener = () => {\n      if (timerRef.current !== null) {\n        clearTimeout(timerRef.current);\n      }\n      timerRef.current = setTimeout(\n        () => dispatch({ type: appReducer.RESIZE }),\n        WAIT_TIMEOUT\n      );\n    };\n    window.addEventListener(\"resize\", resizeListener);\n    return () => {\n      window.removeEventListener(\"resize\", resizeListener);\n    };\n  });\n\n  let leftPanelRef = useRef<HTMLDivElement>(null);\n\n  const testData: ITest[] = useContext(TestDataContext);\n  let schoolSet: Set<string> = new Set();\n  testData.forEach((test) => {\n    schoolSet.add(test.school);\n  });\n  let testMap: Map<string, string[]> = new Map<string, string[]>();\n  schoolSet.forEach((school) => {\n    testMap.set(school, []);\n    testData.forEach((test) => {\n      if (test.school === school) {\n        testMap.get(school)?.push(test.year);\n      }\n    });\n  });\n\n  let testInfo: AccordionModel = {\n    header: \"Competitions\",\n    competitions: [],\n  };\n\n  testMap.forEach((years: string[], school: string) => {\n    if (school.length > 0) {\n      let item: AccordionItemModel = {\n        school: school,\n        years: [],\n      };\n      years.forEach((year) => {\n        item.years.push(year.toString());\n      });\n      testInfo.competitions.push(item);\n    }\n  });\n\n  console.log(\"PUBLIC_ENV\", process.env.PUBLIC_ENV);\n\n  return (\n    <Router>\n      <div\n        className={styles.AppContainer}\n        style={\n          state.columnStyle ? { gridTemplateColumns: state.columnStyle } : {}\n        }\n      >\n        <Header styleOptions={{ gridRow: 1, gridColumn: \"1 /span 4\" }} />\n        <LeftPanel\n          divRef={leftPanelRef}\n          styleOptions={{\n            gridRow: 2,\n            gridColumn: 1,\n            width: `${state.leftPanelWidthStyle}`,\n          }}\n          testInfo={testInfo}\n        />\n        <div\n          className={styles.LeftGrabContainer}\n          onClick={() => {\n            dispatch({ type: appReducer.TOGGLE });\n          }}\n        >\n          <div className={`${state.arrowClass}`}>\n            <svg\n              viewBox=\"0 0 8 20\"\n              width=\"8px\"\n              focusable=\"false\"\n              aria-hidden=\"true\"\n            >\n              <path d=\"M 0,0 V 20 L 8,10 Z\"></path>\n            </svg>\n          </div>\n        </div>\n        <Switch>\n          <Route path=\"/TestPage/:school/:yearAsString\" exact>\n            <TestPage styleOptions={{ gridRow: 2, gridColumn: 3 }} />\n          </Route>\n          <Route path=\"/\" exact>\n            <HomePage styleOptions={{ gridRow: 2, gridColumn: 3 }} />\n          </Route>\n        </Switch>\n        <div className={styles.BottomPanel}>\n          <div>Bottom</div>\n        </div>\n        <div className={styles.RightMostPanel}></div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerPanelHeight\":\"100px\",\"leftPanelWidth\":\"220px\",\"grabWidth\":\"10px\",\"pseudoWidth\":\"1px\",\"shadow\":\"Accordion_shadow__1YBoR\",\"Title\":\"Accordion_Title__1bXxl\",\"Item\":\"Accordion_Item__1J16-\",\"Container\":\"Accordion_Container__2ouIH\",\"TitleContent\":\"Accordion_TitleContent__2xSBw\",\"ItemTrigger\":\"Accordion_ItemTrigger__23rq3\",\"ItemTriggerName\":\"Accordion_ItemTriggerName__LfnHs\",\"ItemTriggerArrow\":\"Accordion_ItemTriggerArrow__1g9yr\",\"ItemTriggerArrowNormal\":\"Accordion_ItemTriggerArrowNormal__7ShCy\",\"ItemTriggerArrowRotate\":\"Accordion_ItemTriggerArrowRotate__3syH0\",\"ItemBody\":\"Accordion_ItemBody__15Zkf\",\"ItemBodyRow\":\"Accordion_ItemBodyRow__1f_Rr\"};"],"sourceRoot":""}